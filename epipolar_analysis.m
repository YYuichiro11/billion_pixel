% エピポーラ線を引いて，ほんとに位置姿勢が正しく推定できているのかを分析します
% 特徴点マッチングを行い，そのあとにそれらの特徴点のうちの数点をピックアップして，
% それらについてエピポーラ線を計算して表示を行い，
% 目で見てみるのと，特徴点とエピポーラ線の距離を計算して定性定量的に分析します
% この分析によって，位置姿勢の推定がどの程度うまくいっているかを分析します

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% path %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% point cloud path
point_cloud_path = 'mannen2_results/option-0000.ply';

% path is the text file path generated by visualSfM
% image_folder_path is the image folder path saved as /---.nvm.cmvs/00/visualize

path = 'mannen2_results/cameras_v2.txt';
% カメラのid,0からスタート
id1 = 31;
id2 = 32;
image1_path = ['mannen2_results/mannen2_img/000000' int2str(id1) '.jpg'];
image2_path = ['mannen2_results/mannen2_img/000000' int2str(id2) '.jpg'];
cam_position_path = 'mannen2_results/centers-all.ply';
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% 点群データとカメラパラメータの推定結果を読み込みます
pointcloud = pcread(point_cloud_path);
camera_position = pcread(cam_position_path);
camera_params = read_vsfm(path);

% 画像群のうち，2枚だけ読みこみます（画像データが重いため）
I1 = imread(image1_path);
I1 = rgb2gray(I1);
I2 = imread(image2_path);
I2 = rgb2gray(I2);

% 2枚の画像の特徴点マッチングを行います（ORB特徴）
I1points = detectSURFFeatures(I1);
I2points = detectSURFFeatures(I2);

[I1features,validPtsI1] = extractFeatures(I1,I1points(1:5000));
[I2features,validPtsI2] = extractFeatures(I2,I2points(1:5000));

indexPairs = matchFeatures(I1features, I2features);
matchedI1 = validPtsI1(indexPairs(:,1));
matchedI2 = validPtsI2(indexPairs(:,2));

figure; ax = axes;
showMatchedFeatures(I1,I2,matchedI1(1:100),matchedI2(1:100),'montage','Parent',ax);
title(ax, 'Candidate point matches');
legend(ax, 'Matched points 1','Matched points 2');

% 次にエピポーラ線を計算して表示します
[epiLines,min_points_xy,max_points_xy] = computeEpiLine(matchedI1(1:100).Location, camera_params, id1+1, id2+1, I2);

% エピポーラ線と点の距離を計算します
d = zeros(size(epiLines.refer1,1),1);
for a = 1:size(epiLines.refer1,1)
    d(a) = abs((-epiLines.refer1(a,1) * matchedI2.Location(a,1)) + matchedI2.Location(a,2) - epiLines.refer1(a,2))...
        /(sqrt((epiLines.refer1(a,1)^2) + 1));
end


figure; ax = axes;
imshow(I1)
hold on;
plot(matchedI1(1:10))
title(ax, 'I1 points')

figure; ax = axes;
imshow(I2)
hold on;
plot(matchedI2(100))
plot([min_points_xy.refer1(100,1);max_points_xy.refer1(100,1)],[min_points_xy.refer1(100,2);max_points_xy.refer1(100,2)])

title(ax, 'I2 points')

d(100)
mean(d)
median(d)

